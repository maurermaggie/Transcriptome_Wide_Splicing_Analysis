import os 
import sys
import pandas as pd

###################################---Step 1: Define all Config Variables---######################################################
FRASER1_results_uncompiled: config["FRASER1_results_uncompiled"]
FRASER2_results_uncompiled: config["FRASER2_results_uncompiled"]
metadata_file: config["metadata_file"]
input_file_FRASER: config["input_file_FRASER"]
input_file_FRASER2: config["input_file_FRASER2"]
mig_file: config["mig_file"]
output_directory: config["output_directory"]
low_RIN: config["low_RIN"]
genesets: config["genesets"]
genes: config["genes"]
genes_FRASER2: config["genes_FRASER2"]
missing: config["missing"]
size_run_dir: config["size_run_dir"]

###########################################---Step 2: Define Rules--##############################################################
rule all:
    input:
        config["output_directory"] + "/DataFrames/counts.csv",
        config["output_directory"] + "/DataFrames/outliers.csv",
        config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv",
        config["output_directory"] + "/Plots/Figure1/figure1c.pdf",
        config["output_directory"] + "/Stats/figure1c.csv",
        config["output_directory"] + "/Plots/Figure2/figure2b_FRASER.pdf",
        config["output_directory"] + "/Stats/figure2b_FRASER.csv",
        config["output_directory"] + "/Plots/Figure2/figure2b_FRASER2.pdf",
        config["output_directory"] + "/Stats/figure2b_FRASER2.csv",
        config["output_directory"] + "/Plots/Figure3/figure2c_theta.pdf",
        config["output_directory"] + "/Plots/Figure3/figure2a_psi3.pdf",
        config["output_directory"] + "/Plots/Figure3/figure2b_psi5.pdf",
        config["output_directory"] + "/Plots/Figure3/figure2d_jaccard.pdf",
        config["output_directory"] + "/Stats/figure3.csv",
        config["output_directory"] + "/Plots/Supplemental/metrics_venn_diagram.pdf",
        config["output_directory"] + "/Plots/Supplemental/metrics_upset.pdf",
        config["output_directory"] + "/Plots/Figure4/figure4a_variance_explained_linear.pdf",
        config["output_directory"] + "/Plots/Figure4/Covariates/batch_violin.pdf",
        config["output_directory"] + "/Plots/Figure4/Covariates/batch_v_RIN.pdf",
        config["output_directory"] + "/Plots/Figure4/Covariates/batch_boxplot.pdf",
        config["output_directory"] + "/Plots/Figure4/Covariates/sex.pdf",
        config["output_directory"] + "/Plots/Figure4/Covariates/age.pdf",
        config["output_directory"] + "/Plots/Figure4/Covariates/RIN.pdf",
        config["output_directory"] + "/Stats/jaccard_05_lm.csv",
        config["output_directory"] + "/Stats/theta_05_lm.csv",
        config["output_directory"] + "/Stats/psi5_05_lm.csv",
        config["output_directory"] + "/Stats/psi3_05_lm.csv",
        config["output_directory"] + "/Stats/all_05_lm.csv",
        config["output_directory"] + "/Stats/all_05_glm.csv",
        config["output_directory"] + "/Stats/psi3_05_glm.csv",
        config["output_directory"] + "/Stats/psi5_05_glm.csv",
        config["output_directory"] + "/Stats/theta_05_glm.csv",
        config["output_directory"] + "/Stats/jaccard_05_glm.csv",
        config["output_directory"] + "/Plots/Figure4/figure4b_variance_explained_logistic.pdf",
        config["output_directory"] + "/Plots/Figure5/goem_point_RNU4ATAC.pdf",
        config["output_directory"] + "/Stats/number_theta_in_MIGs_outliers.csv",
        config["output_directory"] + "/Stats/RNU4ATAC_vs_non_stats.csv",
        config["output_directory"] + "/Plots/Figure5/number_MIGs_affected_boxplot.pdf",
        config["output_directory"] + "/Stats/number_MIGs_with_theta_outliers.csv",
        config["output_directory"] + "/Stats/RNU4ATAC_vs_non_stats_MIG_count.csv",
        config["output_directory"] + "/Plots/Figure6/goem_point_RNU6ATAC.pdf",
        config["output_directory"] + "/Plots/Figure7/gradient_plot.pdf",
        config["output_directory"] + "/Stats/Size_linear_model_analysis.csv",
        config["output_directory"] + "/Stats/Size_zscore_linear_model_analysis.csv"

rule make_count_dataframe: 
    input:
        results_FRASER1 = config["FRASER1_results_uncompiled"]
    params:
        input_files_FRASER = config["input_file_FRASER"],
        input_files_FRASER2 = config["input_file_FRASER2"],
        low_RIN = config["low_RIN"],
        migs = config["mig_file"],
        results_FRASER2 = config["FRASER2_results_uncompiled"],
        missing_meta = config["missing"]
    output:
        output_file = config["output_directory"] + "/DataFrames/counts.csv"
    shell:"""
        Rscript scripts/make_count_dataframes.r  {input.results_FRASER1} {params.input_files_FRASER} {params.input_files_FRASER2} {params.low_RIN} {params.migs} {params.results_FRASER2} {output.output_file} {params.missing_meta}

        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule make_outlier_dataframe: 
    input:
        count_results = config["output_directory"] + "/DataFrames/counts.csv"
    output:
        output_file = config["output_directory"] + "/DataFrames/outliers.csv"
    shell:"""
        Rscript scripts/make_outlier_dataframe.r  {input.count_results} {output.output_file}

        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule make_metadata_dataframe: 
    input:
        count_results = config["output_directory"] + "/DataFrames/counts.csv",
        outlier_results = config["output_directory"] + "/DataFrames/outliers.csv"
    params: 
        metadata_file = config["metadata_file"]
    output:
        output_file = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    shell:"""
        Rscript scripts/join_metadata.r  {input.outlier_results} {input.count_results} {params.metadata_file} {output.output_file}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule figure_1c: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        output_file = config["output_directory"] + "/Plots/Figure1/figure1c.pdf",
        output2 = config["output_directory"] + "/Stats/figure1c.csv"
    shell:"""
        Rscript scripts/Figure1c.r  {input.results} {output.output_file} {output.output2}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule figure_2b: 
    input:
        results_uncompiled = config["FRASER1_results_uncompiled"]
    params:
        low_RIN = config["low_RIN"],
        genes = config["genes"],
        genesets = config["genesets"],
        fraser = "FRASER"
    output:
        output_file = config["output_directory"] + "/Plots/Figure2/figure2b_FRASER.pdf",
        output2 = config["output_directory"] + "/Stats/figure2b_FRASER.csv"
    shell:"""
        Rscript scripts/Figure2b.r  {input.results_uncompiled} {params.genesets} {params.genes} {params.low_RIN} {output.output_file} {output.output2} {params.fraser}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule figure_2b_FRASER2: 
    input:
        results_uncompiled = config["FRASER2_results_uncompiled"]
    params:
        low_RIN = config["low_RIN"],
        genes = config["genes_FRASER2"],
        genesets = config["genesets"],
        fraser = "FRASER2"
    output:
        output_file = config["output_directory"] + "/Plots/Figure2/figure2b_FRASER2.pdf",
        output2 = config["output_directory"] + "/Stats/figure2b_FRASER2.csv"
    conda:
        'fraser2'
    shell:"""
        Rscript scripts/Figure2b.r  {input.results_uncompiled} {params.genesets} {params.genes} {params.low_RIN} {output.output_file} {output.output2} {params.fraser}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule figure_3: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        output_file_theta = config["output_directory"] + "/Plots/Figure3/figure2c_theta.pdf",
        output_file_psi3 = config["output_directory"] + "/Plots/Figure3/figure2a_psi3.pdf",
        output_file_psi5 = config["output_directory"] + "/Plots/Figure3/figure2b_psi5.pdf",
        output_file_jaccard = config["output_directory"] + "/Plots/Figure3/figure2d_jaccard.pdf",
        output_stats = config["output_directory"] + "/Stats/figure3.csv",
        output_venn = config["output_directory"] + "/Plots/Supplemental/metrics_venn_diagram.pdf",
        output_upset = config["output_directory"] + "/Plots/Supplemental/metrics_upset.pdf",
    shell:"""
        Rscript scripts/Figure3.r  {input.results} {output.output_file_theta} {output.output_file_psi3} {output.output_file_psi5} {output.output_file_jaccard} {output.output_stats} {output.output_venn} {output.output_upset}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_upset}
        """

rule figure4a_linear_regression: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        output_var_explained = config["output_directory"] + "/Plots/Figure4/figure4a_variance_explained_linear.pdf",
        batch_violin = config["output_directory"] + "/Plots/Figure4/Covariates/batch_violin.pdf",
        batch_v_RIN = config["output_directory"] + "/Plots/Figure4/Covariates/batch_v_RIN.pdf",
        batch = config["output_directory"] + "/Plots/Figure4/Covariates/batch_boxplot.pdf",
        sex = config["output_directory"] + "/Plots/Figure4/Covariates/sex.pdf",
        age = config["output_directory"] + "/Plots/Figure4/Covariates/age.pdf",
        rin = config["output_directory"] + "/Plots/Figure4/Covariates/RIN.pdf",
        jaccard_05_stats = config["output_directory"] + "/Stats/jaccard_05_lm.csv",
        theta_05_stats = config["output_directory"] + "/Stats/theta_05_lm.csv",
        psi5_05_stats = config["output_directory"] + "/Stats/psi5_05_lm.csv",
        psi3_05_stats = config["output_directory"] + "/Stats/psi3_05_lm.csv",
        all_05_stats = config["output_directory"] + "/Stats/all_05_lm.csv"
    shell:"""
        Rscript scripts/Figure4a_linear_regression.r  {input.results} {output.all_05_stats} {output.psi3_05_stats} {output.psi5_05_stats} {output.theta_05_stats} {output.jaccard_05_stats} {output.rin} {output.age} {output.sex} {output.batch} {output.batch_v_RIN} {output.batch_violin} {output.output_var_explained}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_var_explained}
        """

rule figure4b_logistic_regression: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        all_05_stats = config["output_directory"] + "/Stats/all_05_glm.csv",
        psi3_05_stats = config["output_directory"] + "/Stats/psi3_05_glm.csv",
        psi5_05_stats= config["output_directory"] + "/Stats/psi5_05_glm.csv",
        theta_05_stats = config["output_directory"] + "/Stats/theta_05_glm.csv",
        jaccard_05_stats = config["output_directory"] + "/Stats/jaccard_05_glm.csv",
        output_var_explained = config["output_directory"] + "/Plots/Figure4/figure4b_variance_explained_logistic.pdf",
    shell:"""
        Rscript scripts/Figure4b_logistic_regression.r  {input.results} {output.all_05_stats} {output.psi3_05_stats} {output.psi5_05_stats} {output.theta_05_stats} {output.jaccard_05_stats} {output.output_var_explained}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_var_explained}
        """

rule figure_5a: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        geom_point_RNU4ATAC = config["output_directory"] + "/Plots/Figure5/goem_point_RNU4ATAC.pdf",
        number_theta_in_MIGs_outliers = config["output_directory"] + "/Stats/number_theta_in_MIGs_outliers.csv",
        means = config["output_directory"] + "/Stats/RNU4ATAC_vs_non_stats.csv"
    shell:"""
        Rscript scripts/Figure5a.r  {input.results} {output.geom_point_RNU4ATAC} {output.number_theta_in_MIGs_outliers} {output.means}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.geom_point_RNU4ATAC}
        """

rule figure_5b: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        number_MIGs_affected_boxplot = config["output_directory"] + "/Plots/Figure5/number_MIGs_affected_boxplot.pdf",
        number_MIGs_with_theta = config["output_directory"] + "/Stats/number_MIGs_with_theta_outliers.csv",
        means_number_MIGs_with_theta = config["output_directory"] + "/Stats/RNU4ATAC_vs_non_stats_MIG_count.csv"
    shell:"""
        Rscript scripts/Figure5b.r  {input.results} {output.number_MIGs_affected_boxplot} {output.number_MIGs_with_theta} {output.means_number_MIGs_with_theta}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.means_number_MIGs_with_theta}
        """

rule figure_6a: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        geom_point_RNU6ATAC = config["output_directory"] + "/Plots/Figure6/goem_point_RNU6ATAC.pdf"
    shell:"""
        Rscript scripts/Figure6a.r  {input.results} {output.geom_point_RNU6ATAC}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.geom_point_RNU6ATAC}
        """

rule figure_7:
    input:
        size_dir = config["size_run_dir"],
        mig_file = config["mig_file"]
    output:
        gradient_plot = config["output_directory"] + "/Plots/Figure7/gradient_plot.pdf",
        stats_lm = config["output_directory"] + "/Stats/Size_linear_model_analysis.csv",
        stats_z_lm = config["output_directory"] + "/Stats/Size_zscore_linear_model_analysis.csv"
    shell:"""
        Rscript scripts/Figure7.r  {input.size_dir} {input.mig_file} {output.gradient_plot} {output.stats_lm} {output.stats_z_lm}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.gradient_plot}
        """

