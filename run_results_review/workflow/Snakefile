import os 
import sys
import pandas as pd

###################################---Step 1: Define all Config Variables---######################################################
FRASER1_results_uncompiled: config["FRASER1_results_uncompiled"]
FRASER2_results_uncompiled: config["FRASER2_results_uncompiled"]
metadata_file: config["metadata_file"]
input_file_FRASER: config["input_file_FRASER"]
input_file_FRASER2: config["input_file_FRASER2"]
mig_file: config["mig_file"]
output_directory: config["output_directory"]
genesets: config["genesets"]
genes: config["genes"]
genes_FRASER2: config["genes_FRASER2"]
size_run_dir: config["size_run_dir"]

###########################################---Step 2: Define Rules--##############################################################
rule all:
    input:
    #make count dataframe
        config["output_directory"] + "/DataFrames/counts.csv",
    #make outlier dataframe
        config["output_directory"] + "/DataFrames/outliers.csv",
    #make metadata dataframe
        config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv",
        config["output_directory"] + "/DataFrames/low_RIN.csv",
    #figure 1
        config["output_directory"] + "/Plots/Figure1/figure1c_theta.pdf",
        config["output_directory"] + "/Plots/Figure1/figure1a_psi3.pdf",
        config["output_directory"] + "/Plots/Figure1/figure1b_psi5.pdf",
        config["output_directory"] + "/Plots/Figure1/figure1d_jaccard.pdf",
        config["output_directory"] + "/Stats/figure1.csv",
        config["output_directory"] + "/Plots/Supplemental/metrics_venn_diagram.pdf",
        config["output_directory"] + "/Plots/Supplemental/metrics_upset.pdf",
    #figure 2a
        config["output_directory"] + "/Plots/Figure2/goem_point_RNU4ATAC.pdf",
        config["output_directory"] + "/Stats/number_theta_in_MIGs_outliers.csv",
        config["output_directory"] + "/Stats/RNU4ATAC_vs_non_stats.csv",
    #figure 3
        config["output_directory"] + "/Plots/Figure3a/venn_diagram_RNU6ATAC_RNU4ATAC.pdf",
    #figure S2
        config["output_directory"] + "/Plots/FigureS2/figureS2.pdf",
        config["output_directory"] + "/Stats/figureS2.csv",
    #figure S3
        config["output_directory"] + "/Plots/FigureS3/figureS3a_FRASER.pdf",
        config["output_directory"] + "/Stats/figureS3a_FRASER.csv",
        config["output_directory"] + "/Plots/FigureS3/figureS3b_FRASER2.pdf",
        config["output_directory"] + "/Stats/figureS3b_FRASER2.csv",
    #figure S4
        config["output_directory"] + "/Plots/FigureS4/upset_plot_outlier_status.pdf",
    #figure S5a
        config["output_directory"] + "/Plots/FigureS5a/figureS5a_variance_explained_linear.pdf",
        config["output_directory"] + "/Plots/FigureS5a/Covariates/batch_violin.pdf",
        config["output_directory"] + "/Plots/FigureS5a/Covariates/batch_v_RIN.pdf",
        config["output_directory"] + "/Plots/FigureS5a/Covariates/batch_boxplot.pdf",
        config["output_directory"] + "/Plots/FigureS5a/Covariates/sex.pdf",
        config["output_directory"] + "/Plots/FigureS5a/Covariates/age.pdf",
        config["output_directory"] + "/Plots/FigureS5a/Covariates/RIN.pdf",
        config["output_directory"] + "/Stats/jaccard_05_lm.csv",
        config["output_directory"] + "/Stats/theta_05_lm.csv",
        config["output_directory"] + "/Stats/psi5_05_lm.csv",
        config["output_directory"] + "/Stats/psi3_05_lm.csv",
        config["output_directory"] + "/Stats/all_05_lm.csv",
    #figure S5B
        config["output_directory"] + "/Stats/all_05_glm.csv",
        config["output_directory"] + "/Stats/psi3_05_glm.csv",
        config["output_directory"] + "/Stats/psi5_05_glm.csv",
        config["output_directory"] + "/Stats/theta_05_glm.csv",
        config["output_directory"] + "/Stats/jaccard_05_glm.csv",
        config["output_directory"] + "/Plots/FigureS5b/figureS5b_variance_explained_logistic.pdf",
    #figure S6
        config["output_directory"] + "/Plots/FigureS6/upset_plot_RNU4ATAC_genes.pdf",
        config["output_directory"] + "/Stats/RNU4ATAC_gene_comparison.csv",
        config["output_directory"] + "/Stats/RNU4ATAC_RNU6ATAC_gene_comparison.csv",
    #figure S7
        config["output_directory"] + "/Plots/FigureS7/gradient_plot.pdf",
        config["output_directory"] + "/Stats/Size_linear_model_analysis.csv",
        config["output_directory"] + "/Stats/Size_zscore_linear_model_analysis.csv",
    #figure S8
        config["output_directory"] + "/Plots/FigureS8/jaccard_geom_point.pdf"

ruleorder: make_count_dataframe > make_outlier_dataframe > make_metadata_dataframe > figure_1 > figure_2a > figure_3a > figure_S2 > figure_S3a_FRASER > figure_S3b_FRASER2 > figureS4 > figureS5a_linear_regression > figureS5b_logistic_regression > figureS6 > figure_S7 > figure_S8

rule make_count_dataframe: 
    input:
        results_FRASER1 = config["FRASER1_results_uncompiled"]
    params:
        input_files_FRASER = config["input_file_FRASER"],
        input_files_FRASER2 = config["input_file_FRASER2"],
        migs = config["mig_file"],
        results_FRASER2 = config["FRASER2_results_uncompiled"],
    output:
        output_file = config["output_directory"] + "/DataFrames/counts.csv"
    priority: 1
    shell:"""
        Rscript scripts/make_count_dataframes.r  {input.results_FRASER1} {params.input_files_FRASER} {params.input_files_FRASER2} {params.migs} {params.results_FRASER2} {output.output_file}

        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule make_outlier_dataframe: 
    input:
        count_results = config["output_directory"] + "/DataFrames/counts.csv"
    output:
        output_file = config["output_directory"] + "/DataFrames/outliers.csv"
    priority: 2
    shell:"""
        Rscript scripts/make_outlier_dataframe.r  {input.count_results} {output.output_file}

        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule make_metadata_dataframe: 
    input:
        count_results = config["output_directory"] + "/DataFrames/counts.csv",
        outlier_results = config["output_directory"] + "/DataFrames/outliers.csv"
    params: 
        metadata_file = config["metadata_file"]
    output:
        output_file = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv",
        rin_file = config["output_directory"] + "/DataFrames/low_RIN.csv"
    priority: 3
    shell:"""
        Rscript scripts/join_metadata.r  {input.outlier_results} {input.count_results} {params.metadata_file} {output.output_file} {output.rin_file}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """
rule figure_1: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        output_file_theta = config["output_directory"] + "/Plots/Figure1/figure1c_theta.pdf",
        output_file_psi3 = config["output_directory"] + "/Plots/Figure1/figure1a_psi3.pdf",
        output_file_psi5 = config["output_directory"] + "/Plots/Figure1/figure1b_psi5.pdf",
        output_file_jaccard = config["output_directory"] + "/Plots/Figure1/figure1d_jaccard.pdf",
        output_stats = config["output_directory"] + "/Stats/figure1.csv",
        output_venn = config["output_directory"] + "/Plots/Supplemental/metrics_venn_diagram.pdf",
        output_upset = config["output_directory"] + "/Plots/Supplemental/metrics_upset.pdf"
    priority: 4
    shell:"""
        Rscript scripts/Figure1.r  {input.results} {output.output_file_theta} {output.output_file_psi3} {output.output_file_psi5} {output.output_file_jaccard} {output.output_stats} {output.output_venn} {output.output_upset}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_upset}
        """

rule figure_2a: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        geom_point_RNU4ATAC = config["output_directory"] + "/Plots/Figure2/goem_point_RNU4ATAC.pdf",
        number_theta_in_MIGs_outliers = config["output_directory"] + "/Stats/number_theta_in_MIGs_outliers.csv",
        means = config["output_directory"] + "/Stats/RNU4ATAC_vs_non_stats.csv"
    priority: 5
    shell:"""
        Rscript scripts/Figure2a.r  {input.results} {output.geom_point_RNU4ATAC} {output.number_theta_in_MIGs_outliers} {output.means}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.geom_point_RNU4ATAC}
        """

rule figure_3a: 
    input:
        results_FRASER1 = config["FRASER1_results_uncompiled"],
        migs_df = config["mig_file"],
        rin_file = config["output_directory"] + "/DataFrames/low_RIN.csv"
    output:
        venn_RNU6ATAC = config["output_directory"] + "/Plots/Figure3a/venn_diagram_RNU6ATAC_RNU4ATAC.pdf"
    priority: 7
    shell:"""
        Rscript scripts/Figure3a.r {input.results_FRASER1} {input.migs_df} {input.rin_file} {output.venn_RNU6ATAC}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.venn_RNU6ATAC}
        """

rule figure_S2: 
    input:
        results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
    output:
        output_file = config["output_directory"] + "/Plots/FigureS2/figureS2.pdf",
        output2 = config["output_directory"] + "/Stats/figureS2.csv"
    priority: 8
    shell:"""
        Rscript scripts/FigureS2.r  {input.results} {output.output_file} {output.output2}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule figure_S3a_FRASER: 
    input:
        results_uncompiled = config["FRASER1_results_uncompiled"],
        low_RIN = config["output_directory"] + "/DataFrames/low_RIN.csv"
    params:
        genes = config["genes"],
        genesets = config["genesets"],
        fraser = "FRASER"
    output:
        output_file = config["output_directory"] + "/Plots/FigureS3/figureS3a_FRASER.pdf",
        output2 = config["output_directory"] + "/Stats/figureS3a_FRASER.csv"
    priority: 9
    shell:"""
        Rscript scripts/FigureS3.r  {input.results_uncompiled} {input.low_RIN} {params.genesets} {params.genes} {output.output_file} {output.output2} {params.fraser}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule figure_S3b_FRASER2: 
    input:
        results_uncompiled = config["FRASER2_results_uncompiled"],
        low_RIN = config["output_directory"] + "/DataFrames/low_RIN.csv"
    params:
        genes = config["genes_FRASER2"],
        genesets = config["genesets"],
        fraser = "FRASER2"
    output:
        output_file = config["output_directory"] + "/Plots/FigureS3/figureS3b_FRASER2.pdf",
        output2 = config["output_directory"] + "/Stats/figureS3b_FRASER2.csv"
    priority: 10
    conda:
        'fraser2'
    shell:"""
        Rscript scripts/FigureS3.r  {input.results_uncompiled} {input.low_RIN} {params.genesets} {params.genes} {output.output_file} {output.output2} {params.fraser}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.output_file}
        """

rule figureS4: 
        input:
            results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
        output:
            upset_plot = config["output_directory"] + "/Plots/FigureS4/upset_plot_outlier_status.pdf",
        priority: 11
        shell:"""
            Rscript scripts/FigureS4.r {input.results} {output.upset_plot}
        
            #Snakemake will error out if you do not do something with the output file in the rule. 
            #To get around this, I ls the output file
            ls {output.upset_plot}
            """

rule figureS5a_linear_regression: 
        input:
            results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
        output:
            output_var_explained = config["output_directory"] + "/Plots/FigureS5a/figureS5a_variance_explained_linear.pdf",
            batch_violin = config["output_directory"] + "/Plots/FigureS5a/Covariates/batch_violin.pdf",
            batch_v_RIN = config["output_directory"] + "/Plots/FigureS5a/Covariates/batch_v_RIN.pdf",
            batch = config["output_directory"] + "/Plots/FigureS5a/Covariates/batch_boxplot.pdf",
            sex = config["output_directory"] + "/Plots/FigureS5a/Covariates/sex.pdf",
            age = config["output_directory"] + "/Plots/FigureS5a/Covariates/age.pdf",
            rin = config["output_directory"] + "/Plots/FigureS5a/Covariates/RIN.pdf",
            jaccard_05_stats = config["output_directory"] + "/Stats/jaccard_05_lm.csv",
            theta_05_stats = config["output_directory"] + "/Stats/theta_05_lm.csv",
            psi5_05_stats = config["output_directory"] + "/Stats/psi5_05_lm.csv",
            psi3_05_stats = config["output_directory"] + "/Stats/psi3_05_lm.csv",
            all_05_stats = config["output_directory"] + "/Stats/all_05_lm.csv"
        priority: 12
        shell:"""
            Rscript scripts/FigureS5a_linear_regression.r  {input.results} {output.all_05_stats} {output.psi3_05_stats} {output.psi5_05_stats} {output.theta_05_stats} {output.jaccard_05_stats} {output.rin} {output.age} {output.sex} {output.batch} {output.batch_v_RIN} {output.batch_violin} {output.output_var_explained}
            
            #Snakemake will error out if you do not do something with the output file in the rule. 
            #To get around this, I ls the output file
            ls {output.output_var_explained}
            """

rule figureS5b_logistic_regression: 
        input:
            results = config["output_directory"] + "/DataFrames/metadata_counts_outlier_joined.csv"
        output:
            all_05_stats = config["output_directory"] + "/Stats/all_05_glm.csv",
            psi3_05_stats = config["output_directory"] + "/Stats/psi3_05_glm.csv",
            psi5_05_stats= config["output_directory"] + "/Stats/psi5_05_glm.csv",
            theta_05_stats = config["output_directory"] + "/Stats/theta_05_glm.csv",
            jaccard_05_stats = config["output_directory"] + "/Stats/jaccard_05_glm.csv",
            output_var_explained = config["output_directory"] + "/Plots/FigureS5b/figureS5b_variance_explained_logistic.pdf",
        priority: 13
        shell:"""
            Rscript scripts/FigureS5b_logistic_regression.r {input.results} {output.all_05_stats} {output.psi3_05_stats} {output.psi5_05_stats} {output.theta_05_stats} {output.jaccard_05_stats} {output.output_var_explained}
        
            #Snakemake will error out if you do not do something with the output file in the rule. 
            #To get around this, I ls the output file
            ls {output.output_var_explained}
            """

rule figureS6: 
            input:
                results = config["FRASER1_results_uncompiled"],
                mig_file = config["mig_file"],
                low_RIN = config["output_directory"] + "/DataFrames/low_RIN.csv"
            output:
                upset_plot = config["output_directory"] + "/Plots/FigureS6/upset_plot_RNU4ATAC_genes.pdf",
                rnu4atac_gene_comparison = config["output_directory"] + "/Stats/RNU4ATAC_gene_comparison.csv",
                rnu4atac_rnu6atac_gene_comparison = config["output_directory"] + "/Stats/RNU4ATAC_RNU6ATAC_gene_comparison.csv"
            priority: 14
            shell:"""
                Rscript scripts/FigureS6.r {input.results} {input.mig_file} {input.low_RIN} {output.upset_plot} {output.rnu4atac_gene_comparison} {output.rnu4atac_rnu6atac_gene_comparison}
            
                #Snakemake will error out if you do not do something with the output file in the rule. 
                #To get around this, I ls the output file
                ls {output.upset_plot}
                """

rule figure_S7:
    input:
        size_dir = config["size_run_dir"],
        mig_file = config["mig_file"]
    output:
        gradient_plot = config["output_directory"] + "/Plots/FigureS7/gradient_plot.pdf",
        stats_lm = config["output_directory"] + "/Stats/Size_linear_model_analysis.csv",
        stats_z_lm = config["output_directory"] + "/Stats/Size_zscore_linear_model_analysis.csv"
    priority: 15
    shell:"""
        Rscript scripts/FigureS7.r  {input.size_dir} {input.mig_file} {output.gradient_plot} {output.stats_lm} {output.stats_z_lm}
    
        #Snakemake will error out if you do not do something with the output file in the rule. 
        #To get around this, I ls the output file
        ls {output.gradient_plot}
        """

rule figure_S8:
        input:
            results_FRASER2 = config["FRASER2_results_uncompiled"],
            mig_file = config["mig_file"],
            low_RIN = config["output_directory"] + "/DataFrames/low_RIN.csv"
        output:
            jaccard_geom_point = config["output_directory"] + "/Plots/FigureS8/jaccard_geom_point.pdf",
        priority: 16
        shell:"""
            Rscript scripts/FigureS8.r  {input.results_FRASER2} {input.mig_file} {input.low_RIN} {output.jaccard_geom_point}
        
            #Snakemake will error out if you do not do something with the output file in the rule. 
            #To get around this, I ls the output file
            ls {output.jaccard_geom_point}
            """
    